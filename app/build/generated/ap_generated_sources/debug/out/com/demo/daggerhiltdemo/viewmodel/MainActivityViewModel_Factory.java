// Generated by Dagger (https://dagger.dev).
package com.demo.daggerhiltdemo.viewmodel;

import com.demo.daggerhiltdemo.network.RetroServiceInterface;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivityViewModel_Factory implements Factory<MainActivityViewModel> {
  private final Provider<RetroServiceInterface> retroServiceInterfaceProvider;

  public MainActivityViewModel_Factory(
      Provider<RetroServiceInterface> retroServiceInterfaceProvider) {
    this.retroServiceInterfaceProvider = retroServiceInterfaceProvider;
  }

  @Override
  public MainActivityViewModel get() {
    MainActivityViewModel instance = newInstance();
    MainActivityViewModel_MembersInjector.injectRetroServiceInterface(instance, retroServiceInterfaceProvider.get());
    return instance;
  }

  public static MainActivityViewModel_Factory create(
      Provider<RetroServiceInterface> retroServiceInterfaceProvider) {
    return new MainActivityViewModel_Factory(retroServiceInterfaceProvider);
  }

  public static MainActivityViewModel newInstance() {
    return new MainActivityViewModel();
  }
}
